{"ast":null,"code":"var _jsxFileName = \"/Users/Carolina/quiz_game/quiz_game/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport QuestionList from \"./QuestionList\";\nimport Score from \"./Score\";\nimport { Timer } from \"./Timer\";\nimport NavigationButtons from \"./NavigationButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  setScore,\n  score,\n  quizFinished,\n  setQuizFinished\n}) => {\n  _s();\n  useEffect(() => {\n    document.body.style.backgroundImage = `url(${mainImage})`;\n    document.body.style.backgroundSize = \"contain\";\n    document.body.style.backgroundRepeat = \"repeat\";\n\n    // Limpia el fondo cuando el componente se desmonta\n    return () => {\n      document.body.style.backgroundImage = \"none\";\n    };\n  }, []); // Se ejecuta solo una vez al cargar el componente\n\n  const handleAnswerButtonClick = selectedAnswer => {\n    if (selectedAnswer === QuestionList[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n    ;\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    if (nextQuestionIndex < QuestionList.length) {\n      setCurrentQuestionIndex(nextQuestionIndex);\n    } else {\n      setQuizFinished(true);\n    }\n  };\n  if (quizFinished === true) {\n    return /*#__PURE__*/_jsxDEV(Score, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Question \", currentQuestionIndex + 1, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \"/\", QuestionList.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-display\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: QuestionList[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-buttons\",\n      children: QuestionList[currentQuestionIndex].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons\",\n        onClick: () => handleAnswerButtonClick(option),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","QuestionList","Score","Timer","NavigationButtons","jsxDEV","_jsxDEV","Quiz","currentQuestionIndex","setCurrentQuestionIndex","setScore","score","quizFinished","setQuizFinished","_s","document","body","style","backgroundImage","mainImage","backgroundSize","backgroundRepeat","handleAnswerButtonClick","selectedAnswer","answer","nextQuestionIndex","length","fileName","_jsxFileName","lineNumber","columnNumber","children","className","question","options","map","option","onClick","_c","$RefreshReg$"],"sources":["/Users/Carolina/quiz_game/quiz_game/src/components/Quiz.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\nimport QuestionList from \"./QuestionList\";\nimport Score from \"./Score\";\nimport { Timer } from \"./Timer\";\nimport NavigationButtons from \"./NavigationButtons\";\n\nconst Quiz = ({currentQuestionIndex, setCurrentQuestionIndex, setScore, score, quizFinished, setQuizFinished }) => {\n\n    useEffect(() => {\n        document.body.style.backgroundImage = `url(${mainImage})`;\n        document.body.style.backgroundSize = \"contain\";\n        document.body.style.backgroundRepeat = \"repeat\";\n      \n        // Limpia el fondo cuando el componente se desmonta\n        return () => {\n          document.body.style.backgroundImage = \"none\";\n        };\n      }, []); // Se ejecuta solo una vez al cargar el componente\n      \n\n    const handleAnswerButtonClick = (selectedAnswer) => {  \n        if (selectedAnswer === QuestionList[currentQuestionIndex].answer) {\n          setScore (score + 1);\n          \n        };\n    \n        const nextQuestionIndex = currentQuestionIndex + 1;\n        if (nextQuestionIndex < QuestionList.length) {\n          setCurrentQuestionIndex(nextQuestionIndex);\n        } else {\n          setQuizFinished(true);\n        }\n    };\n    if (quizFinished ===true){\n        return <Score score={score}/>\n    \n    }\n\n    return (\n        <div>\n            <div className=\"question-counter\">\n                <span>Question {currentQuestionIndex + 1} </span>/ \n                {QuestionList.length}\n            </div>\n            <div className=\"question-display\" >\n              <span   >{QuestionList[currentQuestionIndex].question}</span>\n            </div>\n            <div className=\"container-buttons\">\n                {QuestionList[currentQuestionIndex].options.map((option) =>(\n                    <button \n                        className=\"buttons\"\n                        key={option}\n                        onClick={()=> handleAnswerButtonClick(option)}>\n                        {option}  \n                    </button>\n                ))}\n            </div>  \n            <Timer  />\n        </div>\n      \n    );\n}\n \nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}